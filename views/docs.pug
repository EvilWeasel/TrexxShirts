extends layout


block content
    <div class="row">
        <nav id="ihvz" class="col-4 sticky-top">
            <header class="navbar-header">
                <h1>Inhaltsverzeichnis</h1>
            </header>
            <div class="nav-links">
                <a href="#intro" class="link">Einleitung</a>
                <a href="#node" class="link">Node</a>
                <a href="#express" class="link">Express</a>
                <a href="#sequelize" class="link">Sequelize</a>
                <a href="#pug" class="link">Pug</a>
                <a href="#challenges" class="link">Herausforderungen</a>
                <a href="#learnings" class="link">Lernziele</a>
            </div>
        </nav>

        <div class="docs col-8">
            <div class="main-section" id="intro">
                h1 Einleitung
                h5 Aufgabenstellung
                <p>
                    <iframe class="webview" src="https://cdn.jsdelivr.net/gh/trexxak/ProjectPrompts@main/Planspiel_Verwaltungssoftware_Shirts.md" name="iframeAufgabe"></iframe>
                </p>
                h5 Begriffserläuterungen
                <p>
                    <strong>Node.js</strong> ist eine JavaScript-Runtime-Environment, die es ermöglicht Fullstack-Webapplikationen mit JavaScript zu erstellen.
                    br
                    <strong>Express</strong> ist ein BackEnd-Framework, das Designed wurde, um auf einfache Art und Weiße einen Webserver mit serverseitigem Javascript zu erstellen.
                    br
                    <strong>Sequelize</strong> ist ein ORM (Object Relational Mapper) für Node.js, der es ermöglicht Modelle als erweiterte JavaScript "Klassen" zu definieren und diese mit einer Datanbank zu verknüpfen.
                </p>
                <h1>Einleitung</h1>
                p Der Trexx-Shirts Kundenmanager ist eine Webanwendung, die mit Node.js, Express.js und Sequelize realisiert wurde. Es bietet eine einfache und intuitive Oberfläche für alle nötigen Prozesse im Bereich des Kundenmanagments, eine Anbindung an eine Datenbank und ist ein Open-Source Projekt.
            </div>
            <div class="main-section" id="node">
                h1 Node
                <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Dolores qui deserunt, laboriosam enim id tempore ex nihil repellat voluptatem ullam incidunt perferendis eveniet sint veniam atque! Vel, deleniti nobis officiis eius ab odio commodi laudantium sit, sint dolor molestias reiciendis, tempore earum pariatur dolores similique nulla voluptatum. Natus deserunt id, illum sapiente facilis recusandae ipsum fugit, nam blanditiis, dolorem quas maxime doloribus consequuntur unde voluptates. Doloremque eligendi quaerat aspernatur fuga voluptatum eos expedita itaque nemo, praesentium dolorem sequi error ab asperiores ipsa natus animi accusantium magni. Distinctio in atque nemo, hic reiciendis id quasi nobis, consectetur, qui vitae dolore ipsum.</p>
                <p>Lorem ipsum dolor, sit amet consectetur adipisicing elit. Mollitia impedit at laudantium? Nam quaerat omnis deleniti perferendis culpa necessitatibus doloribus numquam consectetur, dicta sunt, dolor aperiam quo totam, labore voluptatibus voluptate in? Sapiente officiis error odio impedit nisi libero animi alias, iure neque nulla asperiores tempora, dolores illo minima, cupiditate voluptatem rerum! Magnam, molestiae? Quasi nesciunt delectus exercitationem quo aspernatur vel? Labore, odit numquam, maiores expedita rem tenetur, inventore assumenda totam dolor alias possimus temporibus provident error nobis reprehenderit ea nesciunt laborum quae quidem officiis debitis commodi! Voluptatum, voluptatibus! Tempore atque incidunt beatae a veritatis id unde qui tempora in.</p>
            </div>
            <div class="main-section" id="express">
                <h1>Express</h1>
                p Express ist ein einfaches serverseitiges Node.js Webframework. Es liefert einige Werkzeuge, mit denen das enwickeln von Webanwendungen erleichtert wird. Eine Express.js Anwendung besteht zumindest aus der Datei add.js, in welcher die Middleware und die Controller registriert und der Webserver gestartet wird.

                p Ein Beispiel aus unserer Anwendung: 
                img(src="/images/app_use.jpg") 

                p Den unterschiedlichen Anfragen vom Client können im Router sogenannte Requesthandler zugewiesen werden, welche auf recht unkomplizierte Weise diese Anfragen bearbeiten. Jeder dieser Requesthandler ist eigentlich eine Mini-App, es werden bis zu drei Parameter übergeben (Anfrageobjekt, Antwortobjekt und der nächste Requesthandler) und verarbeitet, werden einer Anfrage mehrere Handler zugewiesen werden diese nacheinander ausgeführt.

                img(src="/images/error_handler.jpg")

                p Durch diese modulare Architektur lassen sich Prozesse, welche oft ausgeführt werden müssen, z. B. Authentifizierungslogiken, vor Abhandlung eines Prozesses einschieben.

                img(src="/images/app_get.jpg")
            </div>
            <div class="main-section" id="sequelize">
            
                <h1>Sequelize</h1>
                <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Dolores qui deserunt, laboriosam enim id tempore ex nihil repellat voluptatem ullam incidunt perferendis eveniet sint veniam atque! Vel, deleniti nobis officiis eius ab odio commodi laudantium sit, sint dolor molestias reiciendis, tempore earum pariatur dolores similique nulla voluptatum. Natus deserunt id, illum sapiente facilis recusandae ipsum fugit, nam blanditiis, dolorem quas maxime doloribus consequuntur unde voluptates. Doloremque eligendi quaerat aspernatur fuga voluptatum eos expedita itaque nemo, praesentium dolorem sequi error ab asperiores ipsa natus animi accusantium magni. Distinctio in atque nemo, hic reiciendis id quasi nobis, consectetur, qui vitae dolore ipsum.</p>
            </div>
            <div class="main-section" id="pug">
                <h1>Pug</h1>
                p Pug ist eine Template-Engine für Express.js und gilt als das standard View-Template. Wer sich mit Node.js und Express.js befasst, für den führt kein Weg an Pug vorbei. Es ist eine vereinfachte, whitespace-sensitive Schreibweise von HTML-Seiten. Mit simplen Textbefehlen, die den Namen der HTML-Tags entsprechen, baut man durch Einrückungen eine Baumstruktur auf, schließende Tags gibt es nicht. So bedeuten 2 Leerzeichen etwa, dass das folgende Element ein Kindelement des vorherigen ist. Außerdem bietet Pug viele mächtige Features wie z.B. Filtern, Vererbung, Iteration durch Sammlungen, Includes und vieles mehr.
                img(src="/images/inheritance_from_layout.jpg") 
                p Pug kann aber auch ohne Probleme mit der 'echten' HTML Schreibweise umgehen, die Verwendung kann aber manchmal zu unerwarteten Ergebnissen führen, zum Beispiel bei der Verwendung von Variablen: 
                p Zwei Möglichkeiten wie man Variablen lokal deklariert: 
                img(src="/images/strings_und_variablen.jpg")
                p Das Ergebnis in HTML:
                img(src="/images/html_ausgabe.jpg")
                p Vermischt man aber diese beiden Möglichkeiten, bekommt nicht das gewünschte Ergebnis:
                img(src="/images/attribute_interpolation.jpg") 
                p Der bessere Weg:
                img(src="/images/variablen_in_attribut.jpg")

            </div>
            <div class="main-section" id="challenges">
                <h1>Herausforderungen</h1>
                <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Dolores qui deserunt, laboriosam enim id tempore ex nihil repellat voluptatem ullam incidunt perferendis eveniet sint veniam atque! Vel, deleniti nobis officiis eius ab odio commodi laudantium sit, sint dolor molestias reiciendis, tempore earum pariatur dolores similique nulla voluptatum. Natus deserunt id, illum sapiente facilis recusandae ipsum fugit, nam blanditiis, dolorem quas maxime doloribus consequuntur unde voluptates. Doloremque eligendi quaerat aspernatur fuga voluptatum eos expedita itaque nemo, praesentium dolorem sequi error ab asperiores ipsa natus animi accusantium magni. Distinctio in atque nemo, hic reiciendis id quasi nobis, consectetur, qui vitae dolore ipsum.</p>
                <ul>
                    <li>asdf</li>
                    <li>asdf</li>
                    <li>safdsa</li>
                    <li>fslkjlj</li>
                    <li>lkjlkjlj</li>
                    <li>lkjljljljlk</li>
                </ul>
            </div>
            <div class="main-section" id="learnings">
                <h1>Lernziele</h1>
                <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Dolores qui deserunt, laboriosam enim id tempore ex nihil repellat voluptatem ullam incidunt perferendis eveniet sint veniam atque! Vel, deleniti nobis officiis eius ab odio commodi laudantium sit, sint dolor molestias reiciendis, tempore earum pariatur dolores similique nulla voluptatum. Natus deserunt id, illum sapiente facilis recusandae ipsum fugit, nam blanditiis, dolorem quas maxime doloribus consequuntur unde voluptates. Doloremque eligendi quaerat aspernatur fuga voluptatum eos expedita itaque nemo, praesentium dolorem sequi error ab asperiores ipsa natus animi accusantium magni. Distinctio in atque nemo, hic reiciendis id quasi nobis, consectetur, qui vitae dolore ipsum.</p>
            </div>
        </div>
    </div>